{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"deploy-ocr-en/","text":"Background This deployment guide describes how to deploy AI Solution Kit - Chinese Optical Character Recognition(OCR) solution by Amazon CloudFormation templates. The AI and ML driven applications are maturing rapidly and creating new demands on enterprises, the AI Solution Kit provides diversified leading AI/ML solutions that are easy to use. Customers can easily work with the REST API or software development kit (SDK) provided by AI/ML solution. The Chinese OCR solution based on AI/ML text recognition technologies, it can automatically extract the text in all kinds of pictures, and returns the text and the coordinates of the text in the picture. The OCR solution support for Simplified Chinese, Traditional Chinese, English languages and numbers. This solution also supports the most commonly used Hong Kong Supplementary Character Set (HKSCS) extensions of traditional Chinese. Solution Description Once the solution deployed by Amazon CloudFormation template, customers can use this solution feature by calling HTTP (s) or API interfaces, the REST API interface which created by Amazon API Gateway provides customers the AI services and customers can send request (pictures or text) to the Amazon API Gateway via HTTP POST method, then the Amazon Lambda function is invoked by the Amazon API Gateway to finish the text recognition and return the results (in JSON format). By using a serverless architecture, such as Amazon Lambda, Amazon API Gateway, serverless works in a pay-as-you-go manner, which means that customers only pay for those resources which they actually use. System Architecture Starting from the API User(s) side, the API user sends an HTTP request to Amazon API Gateway to pass payload parameters. The API Gateway is a layer that provides the RESTful API to the client for the AI applications. Lambda Integration The ML models are stored in Amazon EFS, the AI algorithm are implemented in the Lambda function, the Lambda function parses the values from API Gateway and performs model in EFS. After that, it returns a value (JSON format) and sends it back to the API Gateway. Architecture diagram This solution currently supports deployment in Amazon Web Services standard regions. Components Amazon API Gateway This solution uses API Gateway to route HTTP requests To associate the domain name registered by the ICP API Gateway can also set a key to authorize the HTTP POST requester Amazon Lambda The Lambda function handles the customer's requests for inference. Amazon EFS Amazon EFS stores machine learning models based on Lambda pre-training. Lambda functions perform inference calculations by calling models stored in Amazon EFS and return the results to the caller. Automated Deployment The following deployment instructions apply to solutions deployed in the Amazon Web Services (Ningxia) region operated by NWCD or the Amazon Web Services (Beijing) region operated by Sinnet. You can use the following link to quickly launch an Amazon CloudFormation stack to deploy and manage this solution. Time to deploy : Approximately 15 minutes. Prerequisites (China Region Only) This solution uses Amazon API Gateway to receive API call requests, so if you want to provide API requests that can be accessed without authentication in the Beijing region, please make sure that your Amazon Web Services account has passed the Internet Content Provider (ICP) for the record, port 80/443 can be opened normally, please refer to here . Sign in to Amazon Web Service console Sign in to the Amazon Web Service Management Console with the IAM permissions (such as: APIGatewayInvokeFullAcces ). Please use Sign in to amazon.com to sign in your Amazon Web Services account, for China region via https://console.amazonaws.cn. Launch the stack Open the Amazon Web Services console and use the Region selector in the console navigation bar to launch this solution in a different Amazon Web Service Region. Then, click the applicable link to launch the solution Amazon CloudFormation template. You can also download the template as a starting point for your own implementation. Launch Solution Description Beijing Region AI Solution Kit - Chinese OCR in Beijing, China region Ningxia Region AI Solution Kit - Chinese OCR in Ningxia, China region Global Regions AI Solution Kit - Chinese OCR CloudFormation template AIKits-Infer-OCR-Stack.template By default, the template will start after you log in after the default console area. To launch the solution in a designated Amazon Web Service region, please select it from the region drop-down list in the console navigation bar. On the Specify template page, verify that you selected the correct template and choose Next. On the Specify stack details page, assign a name to AI Solution Kit - Chinese OCR in the Stack name field. Under Parameters , review the parameters for the template, and modify them as necessary. To opt out of a particular feature, choose none or no as applicable. Parameter Default Description customStageName prod The name of the stage, which API Gateway uses as the first path segment in the invoked Uniform Resource Identifier (URI). customAuthType AWS_IAM Authorization for API Gateway. Valid Values are AWS_IAM and NONE . On the Review page, review and confirm the settings. Check the boxes acknowledging that the template will create Amazon Web Service Identity and Access Management (IAM) resources and any additional capabilities required. Choose Create to deploy the stack. View the status of the stack in the Amazon CloudFormation console in the Status column. You should receive a status of CREATE_COMPLETE in approximately 15 minutes. To see details for the stack resources, choose the Outputs tab. This will include the aikitsInvokeURL value, which is the API Gateway endpoint. Get Started You can find the REST API inviking URL with name aikitsInvokeURL in the Outputs tab of Amazon CloudFormation stack. REST API Reference HTTP Method: POST Body Parameters Name Type Optional Description url String Use img or url URL address of the image. Supports HTTP/HTTPS and S3 protocols. Required image format jpg / jpeg / png / bmp, not exceeding the longest side 4096px. img String Use img or url Base64-encoded image data Sample Request Body { \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/ocr-2.jpg\" } { \"img\": \"/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/\u2026\u2026\" } Response Prarameters Name Type Description words String Identify text content location JSON Recognized text in the image coordinate values, including top, left, width, height integer value score Float The confidence of the recognized text Sample Response [ { \"words\": \"\u9999\u6e2f\u6c38\u4e45\u6027\u5c45\u6c11\u8eab\u4efd\u8b49\", \"location\": { \"top\": 18, \"left\": 148, \"width\": 169, \"height\": 17 }, \"score\": 0.9923796653747559 }, { \"words\": \"HONG KONG PERMANENTIDENTITYCARD\", \"location\": { \"top\": 36, \"left\": 71, \"width\": 321, \"height\": 17 }, \"score\": 0.9825196266174316 } ] Sample Request Code cURL curl --location --request POST 'https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/ocr' \\ --header 'Content-Type: application/json' \\ --data-raw '{ \"url\":\"https://aikits.demo.solutions.aws.a2z.org.cn/img/ocr-2.jpg\" }' Python (requests) import requests import json url = \"https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/ocr\" payload = json.dumps({ \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/ocr-2.jpg\" }) headers = { 'Content-Type': 'application/json' } response = requests.request(\"POST\", url, headers=headers, data=payload) print(response.text) Java (OkHttp) OkHttpClient client = new OkHttpClient().newBuilder() .build(); MediaType mediaType = MediaType.parse(\"application/json\"); RequestBody body = RequestBody.create(mediaType, \"{\\n \\\"url\\\":\\\"https://aikits.demo.solutions.aws.a2z.org.cn/img/ocr-2.jpg\\\"\\n}\"); Request request = new Request.Builder() .url(\"https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/ocr\") .method(\"POST\", body) .addHeader(\"Content-Type\", \"application/json\") .build(); Response response = client.newCall(request).execute(); PHP (curl) <?php $curl = curl_init(); curl_setopt_array($curl, array( CURLOPT_URL => 'https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/ocr', CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => '', CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 0, CURLOPT_FOLLOWLOCATION => true, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => 'POST', CURLOPT_POSTFIELDS =>'{ \"url\":\"https://aikits.demo.solutions.aws.a2z.org.cn/img/ocr-2.jpg\" }', CURLOPT_HTTPHEADER => array( 'Content-Type: application/json' ), )); $response = curl_exec($curl); curl_close($curl); echo $response; Invoke URL via IAM in Postman Create a new tab in Postman and enter the API invoke URL in the previous step into the address bar. Select POST as the HTTP verb. Select Amazon Web Service Signature in the Authorization tab, and enterauth details like AccessKey, SecretKey and Region of the corresponding account (such as cn-north-1 or cn-northwest-1 ). Click the Body tab and select the option raw and then choose the JSON format. Enter the test data in the Body and click the Send button to see the response result. { \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/ocr-2.jpg\" } Uninstall To uninstall the solution, delete the CloudFormation stacks: Sign in to the Amazon Web Service CloudFormation console Select the solution\u2019s parent stack. All other solution stacks will be deleted automatically. Choose Delete . You can undeploy the stack in Amazon CloudFormation console. The deletion process takes about 10 minutes.","title":"Deployment - Chinese OCR"},{"location":"deploy-ocr-en/#background","text":"This deployment guide describes how to deploy AI Solution Kit - Chinese Optical Character Recognition(OCR) solution by Amazon CloudFormation templates. The AI and ML driven applications are maturing rapidly and creating new demands on enterprises, the AI Solution Kit provides diversified leading AI/ML solutions that are easy to use. Customers can easily work with the REST API or software development kit (SDK) provided by AI/ML solution. The Chinese OCR solution based on AI/ML text recognition technologies, it can automatically extract the text in all kinds of pictures, and returns the text and the coordinates of the text in the picture. The OCR solution support for Simplified Chinese, Traditional Chinese, English languages and numbers. This solution also supports the most commonly used Hong Kong Supplementary Character Set (HKSCS) extensions of traditional Chinese.","title":"Background"},{"location":"deploy-ocr-en/#solution-description","text":"Once the solution deployed by Amazon CloudFormation template, customers can use this solution feature by calling HTTP (s) or API interfaces, the REST API interface which created by Amazon API Gateway provides customers the AI services and customers can send request (pictures or text) to the Amazon API Gateway via HTTP POST method, then the Amazon Lambda function is invoked by the Amazon API Gateway to finish the text recognition and return the results (in JSON format). By using a serverless architecture, such as Amazon Lambda, Amazon API Gateway, serverless works in a pay-as-you-go manner, which means that customers only pay for those resources which they actually use.","title":"Solution Description"},{"location":"deploy-ocr-en/#system-architecture","text":"Starting from the API User(s) side, the API user sends an HTTP request to Amazon API Gateway to pass payload parameters. The API Gateway is a layer that provides the RESTful API to the client for the AI applications. Lambda Integration The ML models are stored in Amazon EFS, the AI algorithm are implemented in the Lambda function, the Lambda function parses the values from API Gateway and performs model in EFS. After that, it returns a value (JSON format) and sends it back to the API Gateway.","title":"System Architecture"},{"location":"deploy-ocr-en/#architecture-diagram","text":"This solution currently supports deployment in Amazon Web Services standard regions.","title":"Architecture diagram"},{"location":"deploy-ocr-en/#components","text":"Amazon API Gateway This solution uses API Gateway to route HTTP requests To associate the domain name registered by the ICP API Gateway can also set a key to authorize the HTTP POST requester Amazon Lambda The Lambda function handles the customer's requests for inference. Amazon EFS Amazon EFS stores machine learning models based on Lambda pre-training. Lambda functions perform inference calculations by calling models stored in Amazon EFS and return the results to the caller.","title":"Components"},{"location":"deploy-ocr-en/#automated-deployment","text":"The following deployment instructions apply to solutions deployed in the Amazon Web Services (Ningxia) region operated by NWCD or the Amazon Web Services (Beijing) region operated by Sinnet. You can use the following link to quickly launch an Amazon CloudFormation stack to deploy and manage this solution. Time to deploy : Approximately 15 minutes.","title":"Automated Deployment"},{"location":"deploy-ocr-en/#prerequisites-china-region-only","text":"This solution uses Amazon API Gateway to receive API call requests, so if you want to provide API requests that can be accessed without authentication in the Beijing region, please make sure that your Amazon Web Services account has passed the Internet Content Provider (ICP) for the record, port 80/443 can be opened normally, please refer to here .","title":"Prerequisites (China Region Only)"},{"location":"deploy-ocr-en/#sign-in-to-amazon-web-service-console","text":"Sign in to the Amazon Web Service Management Console with the IAM permissions (such as: APIGatewayInvokeFullAcces ). Please use Sign in to amazon.com to sign in your Amazon Web Services account, for China region via https://console.amazonaws.cn.","title":"Sign in to Amazon Web Service console"},{"location":"deploy-ocr-en/#launch-the-stack","text":"Open the Amazon Web Services console and use the Region selector in the console navigation bar to launch this solution in a different Amazon Web Service Region. Then, click the applicable link to launch the solution Amazon CloudFormation template. You can also download the template as a starting point for your own implementation. Launch Solution Description Beijing Region AI Solution Kit - Chinese OCR in Beijing, China region Ningxia Region AI Solution Kit - Chinese OCR in Ningxia, China region Global Regions AI Solution Kit - Chinese OCR CloudFormation template AIKits-Infer-OCR-Stack.template By default, the template will start after you log in after the default console area. To launch the solution in a designated Amazon Web Service region, please select it from the region drop-down list in the console navigation bar. On the Specify template page, verify that you selected the correct template and choose Next. On the Specify stack details page, assign a name to AI Solution Kit - Chinese OCR in the Stack name field. Under Parameters , review the parameters for the template, and modify them as necessary. To opt out of a particular feature, choose none or no as applicable. Parameter Default Description customStageName prod The name of the stage, which API Gateway uses as the first path segment in the invoked Uniform Resource Identifier (URI). customAuthType AWS_IAM Authorization for API Gateway. Valid Values are AWS_IAM and NONE . On the Review page, review and confirm the settings. Check the boxes acknowledging that the template will create Amazon Web Service Identity and Access Management (IAM) resources and any additional capabilities required. Choose Create to deploy the stack. View the status of the stack in the Amazon CloudFormation console in the Status column. You should receive a status of CREATE_COMPLETE in approximately 15 minutes. To see details for the stack resources, choose the Outputs tab. This will include the aikitsInvokeURL value, which is the API Gateway endpoint.","title":"Launch the stack"},{"location":"deploy-ocr-en/#get-started","text":"You can find the REST API inviking URL with name aikitsInvokeURL in the Outputs tab of Amazon CloudFormation stack.","title":"Get Started"},{"location":"deploy-ocr-en/#rest-api-reference","text":"HTTP Method: POST Body Parameters Name Type Optional Description url String Use img or url URL address of the image. Supports HTTP/HTTPS and S3 protocols. Required image format jpg / jpeg / png / bmp, not exceeding the longest side 4096px. img String Use img or url Base64-encoded image data Sample Request Body { \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/ocr-2.jpg\" } { \"img\": \"/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/\u2026\u2026\" } Response Prarameters Name Type Description words String Identify text content location JSON Recognized text in the image coordinate values, including top, left, width, height integer value score Float The confidence of the recognized text Sample Response [ { \"words\": \"\u9999\u6e2f\u6c38\u4e45\u6027\u5c45\u6c11\u8eab\u4efd\u8b49\", \"location\": { \"top\": 18, \"left\": 148, \"width\": 169, \"height\": 17 }, \"score\": 0.9923796653747559 }, { \"words\": \"HONG KONG PERMANENTIDENTITYCARD\", \"location\": { \"top\": 36, \"left\": 71, \"width\": 321, \"height\": 17 }, \"score\": 0.9825196266174316 } ]","title":"REST API Reference"},{"location":"deploy-ocr-en/#sample-request-code","text":"cURL curl --location --request POST 'https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/ocr' \\ --header 'Content-Type: application/json' \\ --data-raw '{ \"url\":\"https://aikits.demo.solutions.aws.a2z.org.cn/img/ocr-2.jpg\" }' Python (requests) import requests import json url = \"https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/ocr\" payload = json.dumps({ \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/ocr-2.jpg\" }) headers = { 'Content-Type': 'application/json' } response = requests.request(\"POST\", url, headers=headers, data=payload) print(response.text) Java (OkHttp) OkHttpClient client = new OkHttpClient().newBuilder() .build(); MediaType mediaType = MediaType.parse(\"application/json\"); RequestBody body = RequestBody.create(mediaType, \"{\\n \\\"url\\\":\\\"https://aikits.demo.solutions.aws.a2z.org.cn/img/ocr-2.jpg\\\"\\n}\"); Request request = new Request.Builder() .url(\"https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/ocr\") .method(\"POST\", body) .addHeader(\"Content-Type\", \"application/json\") .build(); Response response = client.newCall(request).execute(); PHP (curl) <?php $curl = curl_init(); curl_setopt_array($curl, array( CURLOPT_URL => 'https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/ocr', CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => '', CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 0, CURLOPT_FOLLOWLOCATION => true, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => 'POST', CURLOPT_POSTFIELDS =>'{ \"url\":\"https://aikits.demo.solutions.aws.a2z.org.cn/img/ocr-2.jpg\" }', CURLOPT_HTTPHEADER => array( 'Content-Type: application/json' ), )); $response = curl_exec($curl); curl_close($curl); echo $response;","title":"Sample Request Code"},{"location":"deploy-ocr-en/#invoke-url-via-iam-in-postman","text":"Create a new tab in Postman and enter the API invoke URL in the previous step into the address bar. Select POST as the HTTP verb. Select Amazon Web Service Signature in the Authorization tab, and enterauth details like AccessKey, SecretKey and Region of the corresponding account (such as cn-north-1 or cn-northwest-1 ). Click the Body tab and select the option raw and then choose the JSON format. Enter the test data in the Body and click the Send button to see the response result. { \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/ocr-2.jpg\" }","title":"Invoke URL via IAM in Postman"},{"location":"deploy-ocr-en/#uninstall","text":"To uninstall the solution, delete the CloudFormation stacks: Sign in to the Amazon Web Service CloudFormation console Select the solution\u2019s parent stack. All other solution stacks will be deleted automatically. Choose Delete . You can undeploy the stack in Amazon CloudFormation console. The deletion process takes about 10 minutes.","title":"Uninstall"},{"location":"deploy-porn-en/","text":"Background This deployment guide describes how to deploy AI Solution Kit - Porn Image Detection solution by Amazon CloudFormation templates. The AI and ML driven applications are maturing rapidly and creating new demands on enterprises, the AI Solution Kit provides diversified leading AI/ML solutions that are easy to use. Customers can easily work with the REST API or software development kit (SDK) provided by AI/ML solution. Based on AI/ML image recognition technology, Porn Image Detection solution automatically audits pictures, identifies and obtains multidimensional pornographic quantitative information (normal, sexy, porn). Solution Description Once the solution deployed by Amazon CloudFormation template, customers can use this solution feature by calling HTTP (s) or API interfaces, the REST API interface which created by Amazon API Gateway provides customers the AI services and customers can send request (pictures) to the Amazon API Gateway via HTTP POST method, then the Amazon Lambda function is invoked by the Amazon API Gateway to finish the image recognition and return the results (in JSON format). By using a serverless architecture, such as Amazon Lambda, Amazon API Gateway, serverless works in a pay-as-you-go manner, which means that customers only pay for those resources which they actually use. System Architecture Starting from the API User(s) side, the API user sends an HTTP request to Amazon API Gateway to pass payload parameters. The API Gateway is a layer that provides the RESTful API to the client for the AI applications. Lambda Integration (the first diagram): The ML models are stored in Amazon EFS, the AI algorithm are implemented in the Lambda function, the Lambda function parses the values from API Gateway and performs model in EFS. After that, it returns a value (JSON format) and sends it back to the API Gateway. Architecture diagram This solution currently supports deployment in Amazon Web Services standard regions. Components Amazon API Gateway This solution uses API Gateway to route HTTP requests To associate the domain name registered by the ICP API Gateway can also set a key to authorize the HTTP POST requester Amazon Lambda The Lambda function handles the customer's requests for inference. Amazon EFS Amazon EFS stores machine learning models based on Lambda pre-training. Lambda functions perform inference calculations by calling models stored in Amazon EFS and return the results to the caller. Automated Deployment The following deployment instructions apply to solutions deployed in the Amazon Web Services (Ningxia) region operated by NWCD or the Amazon Web Services (Beijing) region operated by Sinnet. You can use the following link to quickly launch an Amazon CloudFormation stack to deploy and manage this solution. Time to deploy : Approximately 15 minutes. Prerequisites (China Region Only) This solution uses Amazon API Gateway to receive API call requests, so if you want to provide API requests that can be accessed without authentication in the Beijing region, please make sure that your Amazon Web Services account has passed the Internet Content Provider (ICP) for the record, port 80/443 can be opened normally, please refer to here . Sign in to Amazon Web Service console Sign in to the Amazon Web Service Management Console with the IAM permissions (such as: APIGatewayInvokeFullAcces ). Please use Sign in to amazon.com to sign in your Amazon Web Services account, for China region via https://console.amazonaws.cn. Launch the stack Open the Amazon Web Services console and use the Region selector in the console navigation bar to launch this solution in a different Amazon Web Service Region. Then, click the applicable link to launch the solution Amazon CloudFormation template. You can also download the template as a starting point for your own implementation. Launch Solution Description Beijing Region AI Solution Kit - Porn Image Detection in Beijing, China region Ningxia Region AI Solution Kit - Porn Image Detection in Beijing, China region Global Regions AI Solution Kit - Porn Image Detection in Beijing, China region CloudFormation template AIKits-Porn-Image-Detection-Stack.template By default, the template will start after you log in after the default console area. To launch the solution in a designated Amazon Web Service region, please select it from the region drop-down list in the console navigation bar. On the Specify template page, verify that you selected the correct template and choose Next. On the Specify stack details page, assign a name to AI Solution Kit - Porn Image Detection in the Stack name field. Under Parameters , review the parameters for the template, and modify them as necessary. To opt out of a particular feature, choose none or no as applicable. Parameter Default Description customStageName prod The name of the stage, which API Gateway uses as the first path segment in the invoked Uniform Resource Identifier (URI). customAuthType AWS_IAM Authorization for API Gateway. Valid Values are AWS_IAM and NONE . On the Review page, review and confirm the settings. Check the boxes acknowledging that the template will create Amazon Web Service Identity and Access Management (IAM) resources and any additional capabilities required. Choose Create to deploy the stack. View the status of the stack in the Amazon CloudFormation console in the Status column. You should receive a status of CREATE_COMPLETE in approximately 15 minutes. To see details for the stack resources, choose the Outputs tab. This will include the aikitsInvokeURL value, which is the API Gateway endpoint. Get Started You can find the REST API inviking URL with name aikitsInvokeURL in the Outputs tab of Amazon CloudFormation stack. REST API Reference HTTP Method: POST Body Parameters Name Type Optional Description url String Use img or url URL address of the image. Supports HTTP/HTTPS and S3 protocols. Required image format jpg / jpeg / png / bmp, not exceeding the longest side 4096px. img String Use img or url Base64-encoded image data Sample Request Body { \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/detect-1.jpg\" } { \"img\": \"/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/\u2026\u2026\" } Response Prarameters Name Type Description normal Float Identify the image\u2019s normal dimensions of the image sexy Float Identify the image\u2019s sexy dimension porn Float Identify the pornographic dimensions of recognized images Sample Response { \u201cnormal\u201d : 0.15993066132068634, \u201csexy\u201d : 0.5451669692993164, \u201cporn\u201d : 0.2949024438858032 } Sample Request Code cURL curl --location --request POST 'https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/porn' \\ --header 'Content-Type: application/json' \\ --data-raw '{ \"url\":\"https://aikits.demo.solutions.aws.a2z.org.cn/img/detect-1.jpg\" }' Python (requests) import requests import json url = \"https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/porn\" payload = json.dumps({ \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/detect-1.jpg\" }) headers = { 'Content-Type': 'application/json' } response = requests.request(\"POST\", url, headers=headers, data=payload) print(response.text) Java (OkHttp) OkHttpClient client = new OkHttpClient().newBuilder() .build(); MediaType mediaType = MediaType.parse(\"application/json\"); RequestBody body = RequestBody.create(mediaType, \"{\\n \\\"url\\\":\\\"https://aikits.demo.solutions.aws.a2z.org.cn/img/detect-1.jpg\\\"\\n}\"); Request request = new Request.Builder() .url(\"https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/porn\") .method(\"POST\", body) .addHeader(\"Content-Type\", \"application/json\") .build(); Response response = client.newCall(request).execute(); PHP (curl) <?php $curl = curl_init(); curl_setopt_array($curl, array( CURLOPT_URL => 'https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/porn', CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => '', CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 0, CURLOPT_FOLLOWLOCATION => true, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => 'POST', CURLOPT_POSTFIELDS =>'{ \"url\":\"https://aikits.demo.solutions.aws.a2z.org.cn/img/detect-1.jpg\" }', CURLOPT_HTTPHEADER => array( 'Content-Type: application/json' ), )); $response = curl_exec($curl); curl_close($curl); echo $response; Invoke URL via IAM in Postman Create a new tab in Postman and enter the API invoke URL in the previous step into the address bar. Select POST as the HTTP verb. Select Amazon Web Service Signature in the Authorization tab, and enterauth details like AccessKey, SecretKey and Region of the corresponding account (such as cn-north-1 or cn-northwest-1 ). Click the Body tab and select the option raw and then choose the JSON format. Enter the test data in the Body and click the Send button to see the response result. { \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/detect-1.jpg\" } Uninstall To uninstall the solution, delete the CloudFormation stacks: Sign in to the Amazon Web Service CloudFormation console Select the solution\u2019s parent stack. All other solution stacks will be deleted automatically. Choose Delete . You can undeploy the stack in Amazon CloudFormation console. The deletion process takes about 10 minutes.","title":"Deployment - Porn Image Detection"},{"location":"deploy-porn-en/#background","text":"This deployment guide describes how to deploy AI Solution Kit - Porn Image Detection solution by Amazon CloudFormation templates. The AI and ML driven applications are maturing rapidly and creating new demands on enterprises, the AI Solution Kit provides diversified leading AI/ML solutions that are easy to use. Customers can easily work with the REST API or software development kit (SDK) provided by AI/ML solution. Based on AI/ML image recognition technology, Porn Image Detection solution automatically audits pictures, identifies and obtains multidimensional pornographic quantitative information (normal, sexy, porn).","title":"Background"},{"location":"deploy-porn-en/#solution-description","text":"Once the solution deployed by Amazon CloudFormation template, customers can use this solution feature by calling HTTP (s) or API interfaces, the REST API interface which created by Amazon API Gateway provides customers the AI services and customers can send request (pictures) to the Amazon API Gateway via HTTP POST method, then the Amazon Lambda function is invoked by the Amazon API Gateway to finish the image recognition and return the results (in JSON format). By using a serverless architecture, such as Amazon Lambda, Amazon API Gateway, serverless works in a pay-as-you-go manner, which means that customers only pay for those resources which they actually use.","title":"Solution Description"},{"location":"deploy-porn-en/#system-architecture","text":"Starting from the API User(s) side, the API user sends an HTTP request to Amazon API Gateway to pass payload parameters. The API Gateway is a layer that provides the RESTful API to the client for the AI applications. Lambda Integration (the first diagram): The ML models are stored in Amazon EFS, the AI algorithm are implemented in the Lambda function, the Lambda function parses the values from API Gateway and performs model in EFS. After that, it returns a value (JSON format) and sends it back to the API Gateway.","title":"System Architecture"},{"location":"deploy-porn-en/#architecture-diagram","text":"This solution currently supports deployment in Amazon Web Services standard regions.","title":"Architecture diagram"},{"location":"deploy-porn-en/#components","text":"Amazon API Gateway This solution uses API Gateway to route HTTP requests To associate the domain name registered by the ICP API Gateway can also set a key to authorize the HTTP POST requester Amazon Lambda The Lambda function handles the customer's requests for inference. Amazon EFS Amazon EFS stores machine learning models based on Lambda pre-training. Lambda functions perform inference calculations by calling models stored in Amazon EFS and return the results to the caller.","title":"Components"},{"location":"deploy-porn-en/#automated-deployment","text":"The following deployment instructions apply to solutions deployed in the Amazon Web Services (Ningxia) region operated by NWCD or the Amazon Web Services (Beijing) region operated by Sinnet. You can use the following link to quickly launch an Amazon CloudFormation stack to deploy and manage this solution. Time to deploy : Approximately 15 minutes.","title":"Automated Deployment"},{"location":"deploy-porn-en/#prerequisites-china-region-only","text":"This solution uses Amazon API Gateway to receive API call requests, so if you want to provide API requests that can be accessed without authentication in the Beijing region, please make sure that your Amazon Web Services account has passed the Internet Content Provider (ICP) for the record, port 80/443 can be opened normally, please refer to here .","title":"Prerequisites (China Region Only)"},{"location":"deploy-porn-en/#sign-in-to-amazon-web-service-console","text":"Sign in to the Amazon Web Service Management Console with the IAM permissions (such as: APIGatewayInvokeFullAcces ). Please use Sign in to amazon.com to sign in your Amazon Web Services account, for China region via https://console.amazonaws.cn.","title":"Sign in to Amazon Web Service console"},{"location":"deploy-porn-en/#launch-the-stack","text":"Open the Amazon Web Services console and use the Region selector in the console navigation bar to launch this solution in a different Amazon Web Service Region. Then, click the applicable link to launch the solution Amazon CloudFormation template. You can also download the template as a starting point for your own implementation. Launch Solution Description Beijing Region AI Solution Kit - Porn Image Detection in Beijing, China region Ningxia Region AI Solution Kit - Porn Image Detection in Beijing, China region Global Regions AI Solution Kit - Porn Image Detection in Beijing, China region CloudFormation template AIKits-Porn-Image-Detection-Stack.template By default, the template will start after you log in after the default console area. To launch the solution in a designated Amazon Web Service region, please select it from the region drop-down list in the console navigation bar. On the Specify template page, verify that you selected the correct template and choose Next. On the Specify stack details page, assign a name to AI Solution Kit - Porn Image Detection in the Stack name field. Under Parameters , review the parameters for the template, and modify them as necessary. To opt out of a particular feature, choose none or no as applicable. Parameter Default Description customStageName prod The name of the stage, which API Gateway uses as the first path segment in the invoked Uniform Resource Identifier (URI). customAuthType AWS_IAM Authorization for API Gateway. Valid Values are AWS_IAM and NONE . On the Review page, review and confirm the settings. Check the boxes acknowledging that the template will create Amazon Web Service Identity and Access Management (IAM) resources and any additional capabilities required. Choose Create to deploy the stack. View the status of the stack in the Amazon CloudFormation console in the Status column. You should receive a status of CREATE_COMPLETE in approximately 15 minutes. To see details for the stack resources, choose the Outputs tab. This will include the aikitsInvokeURL value, which is the API Gateway endpoint.","title":"Launch the stack"},{"location":"deploy-porn-en/#get-started","text":"You can find the REST API inviking URL with name aikitsInvokeURL in the Outputs tab of Amazon CloudFormation stack.","title":"Get Started"},{"location":"deploy-porn-en/#rest-api-reference","text":"HTTP Method: POST Body Parameters Name Type Optional Description url String Use img or url URL address of the image. Supports HTTP/HTTPS and S3 protocols. Required image format jpg / jpeg / png / bmp, not exceeding the longest side 4096px. img String Use img or url Base64-encoded image data Sample Request Body { \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/detect-1.jpg\" } { \"img\": \"/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/\u2026\u2026\" } Response Prarameters Name Type Description normal Float Identify the image\u2019s normal dimensions of the image sexy Float Identify the image\u2019s sexy dimension porn Float Identify the pornographic dimensions of recognized images Sample Response { \u201cnormal\u201d : 0.15993066132068634, \u201csexy\u201d : 0.5451669692993164, \u201cporn\u201d : 0.2949024438858032 }","title":"REST API Reference"},{"location":"deploy-porn-en/#sample-request-code","text":"cURL curl --location --request POST 'https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/porn' \\ --header 'Content-Type: application/json' \\ --data-raw '{ \"url\":\"https://aikits.demo.solutions.aws.a2z.org.cn/img/detect-1.jpg\" }' Python (requests) import requests import json url = \"https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/porn\" payload = json.dumps({ \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/detect-1.jpg\" }) headers = { 'Content-Type': 'application/json' } response = requests.request(\"POST\", url, headers=headers, data=payload) print(response.text) Java (OkHttp) OkHttpClient client = new OkHttpClient().newBuilder() .build(); MediaType mediaType = MediaType.parse(\"application/json\"); RequestBody body = RequestBody.create(mediaType, \"{\\n \\\"url\\\":\\\"https://aikits.demo.solutions.aws.a2z.org.cn/img/detect-1.jpg\\\"\\n}\"); Request request = new Request.Builder() .url(\"https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/porn\") .method(\"POST\", body) .addHeader(\"Content-Type\", \"application/json\") .build(); Response response = client.newCall(request).execute(); PHP (curl) <?php $curl = curl_init(); curl_setopt_array($curl, array( CURLOPT_URL => 'https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/porn', CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => '', CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 0, CURLOPT_FOLLOWLOCATION => true, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => 'POST', CURLOPT_POSTFIELDS =>'{ \"url\":\"https://aikits.demo.solutions.aws.a2z.org.cn/img/detect-1.jpg\" }', CURLOPT_HTTPHEADER => array( 'Content-Type: application/json' ), )); $response = curl_exec($curl); curl_close($curl); echo $response;","title":"Sample Request Code"},{"location":"deploy-porn-en/#invoke-url-via-iam-in-postman","text":"Create a new tab in Postman and enter the API invoke URL in the previous step into the address bar. Select POST as the HTTP verb. Select Amazon Web Service Signature in the Authorization tab, and enterauth details like AccessKey, SecretKey and Region of the corresponding account (such as cn-north-1 or cn-northwest-1 ). Click the Body tab and select the option raw and then choose the JSON format. Enter the test data in the Body and click the Send button to see the response result. { \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/detect-1.jpg\" }","title":"Invoke URL via IAM in Postman"},{"location":"deploy-porn-en/#uninstall","text":"To uninstall the solution, delete the CloudFormation stacks: Sign in to the Amazon Web Service CloudFormation console Select the solution\u2019s parent stack. All other solution stacks will be deleted automatically. Choose Delete . You can undeploy the stack in Amazon CloudFormation console. The deletion process takes about 10 minutes.","title":"Uninstall"},{"location":"deploy-seg-en/","text":"Background This deployment guide describes how to deploy AI Solution Kit - Human Image Segmentation solution by Amazon CloudFormation templates. The AI and ML driven applications are maturing rapidly and creating new demands on enterprises, the AI Solution Kit provides diversified leading AI/ML solutions that are easy to use. Customers can easily work with the REST API or software development kit (SDK) provided by AI/ML solution. Based on deep learning model, Human Image Segmentation solution to identify the outline of the person and body-part in the image, to separate it from the background with high accuracy segmentation. Solution Description Once the solution deployed by Amazon CloudFormation template, customers can use this solution feature by calling HTTP (s) or API interfaces, the REST API interface which created by Amazon API Gateway provides customers the AI services and customers can send request (pictures) to the Amazon API Gateway via HTTP POST verb, then the Amazon Lambda function is invoked by the Amazon API Gateway, and returns the Base64 encoded Alpha channel image data after removing the background. By using a serverless architecture, such as Amazon Lambda, Amazon API Gateway, serverless works in a pay-as-you-go manner, which means that customers only pay for those resources which they actually use. System Architecture Starting from the API User(s) side, the API user sends an HTTP request to Amazon API Gateway to pass payload parameters. The API Gateway is a layer that provides the RESTful API to the client for the AI applications, in AI Kits solution. Lambda Integration (the first diagram): The ML models are stored in Amazon EFS, the AI algorithm are implemented in the Lambda function, the Lambda function parses the values from API Gateway and performs model in EFS. After that, it returns a value (JSON format) and sends it back to the API Gateway. Architecture diagram This solution currently supports deployment in Amazon Web Services standard regions. Components Amazon API Gateway This solution uses API Gateway to route HTTP requests To associate the domain name registered by the ICP API Gateway can also set a key to authorize the HTTP POST requester Amazon Lambda The Lambda function handles the customer's requests for inference. Amazon EFS Amazon EFS stores machine learning models based on Lambda pre-training. Lambda functions perform inference calculations by calling models stored in Amazon EFS and return the results to the caller. Instance Type The Human Image Segmentation solution includes two architecture design types based on Lambda functions. When deploying this solution, users only need to choose one of them for deployment according to actual business scenarios. The Lambda function architecture is designed for serverless architecture, and users only pay for the actual usage. Automated Deployment The following deployment instructions apply to solutions deployed in the Amazon Web Services (Ningxia) region operated by NWCD or the Amazon Web Services (Beijing) region operated by Sinnet. You can use the following link to quickly launch an Amazon CloudFormation stack to deploy and manage this solution. Time to deploy : Approximately 15 minutes. Prerequisites (China Region Only) This solution uses Amazon API Gateway to receive API call requests, so if you want to provide API requests that can be accessed without authentication in the Beijing region, please make sure that your Amazon Web Services account has passed the Internet Content Provider (ICP) for the record, port 80/443 can be opened normally, please refer to here . Sign in to Amazon Web Service console Sign in to the Amazon Web Service Management Console with the IAM permissions (such as: APIGatewayInvokeFullAcces ). Please use Sign in to amazon.com to sign in your Amazon Web Services account, for China region via https://console.amazonaws.cn. Launch the stack Open the Amazon Web Services console and use the Region selector in the console navigation bar to launch this solution in a different Amazon Web Service Region. Then, click the applicable link to launch the solution Amazon CloudFormation template. You can also download the template as a starting point for your own implementation. Launch Solution Description Beijing Region AI Solution Kit - Human Image Segmentation in Beijing, China region Ningxia Region AI Solution Kit - Human Image Segmentation in Ningxia, China region Global Regions AI Solution Kit - Human Image Segmentation CloudFormation template AIKits-Human-Seg-Stack.template By default, the template will start after you log in after the default console area. To launch the solution in a designated Amazon Web Service region, please select it from the region drop-down list in the console navigation bar. On the Specify template page, verify that you selected the correct template and choose Next. On the Specify stack details page, assign a name to AI Solution Kit - Human Image Segmentation in the Stack name field. Under Parameters , review the parameters for the template, and modify them as necessary. To opt out of a particular feature, choose none or no as applicable. Parameter Default Description customStageName prod The name of the stage, which API Gateway uses as the first path segment in the invoked Uniform Resource Identifier (URI). customAuthType AWS_IAM Authorization for API Gateway. Valid Values are AWS_IAM and NONE . On the Review page, review and confirm the settings. Check the boxes acknowledging that the template will create Amazon Web Service Identity and Access Management (IAM) resources and any additional capabilities required. Choose Create to deploy the stack. View the status of the stack in the Amazon CloudFormation console in the Status column. You should receive a status of CREATE_COMPLETE in approximately 15 minutes. To see details for the stack resources, choose the Outputs tab. This will include the aikitsInvokeURL value, which is the API Gateway endpoint. Get Started You can find the REST API inviking URL with name aikitsInvokeURL in the Outputs tab of Amazon CloudFormation stack. REST API Reference HTTP Method: POST Body Parameters Name Type Optional Description url String Use img or url URL address of the image. Supports HTTP/HTTPS and S3 protocols. Required image format jpg / jpeg / png / bmp, not exceeding the longest side 4096px. img String Use img or url Base64-encoded image data Sample Request Body { \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/seg-2.jpg\" } { \"img\": \"/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/\u2026\u2026\" } Response Prarameters Name Type Description result String Base64 encoded Alpha channel image data after removing the background Sample Response { \"result\": \"/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/\u2026\u2026\" } Sample Request Code cURL curl --location --request POST 'https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/seg' \\ --header 'Content-Type: application/json' \\ --data-raw '{ \"url\":\"https://aikits.demo.solutions.aws.a2z.org.cn/img/seg-2.jpg\" }' Python (requests) import requests import json url = \"https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/seg\" payload = json.dumps({ \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/seg-2.jpg\" }) headers = { 'Content-Type': 'application/json' } response = requests.request(\"POST\", url, headers=headers, data=payload) print(response.text) Java (OkHttp) OkHttpClient client = new OkHttpClient().newBuilder() .build(); MediaType mediaType = MediaType.parse(\"application/json\"); RequestBody body = RequestBody.create(mediaType, \"{\\n \\\"url\\\":\\\"https://aikits.demo.solutions.aws.a2z.org.cn/img/seg-2.jpg\\\"\\n}\"); Request request = new Request.Builder() .url(\"https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/seg\") .method(\"POST\", body) .addHeader(\"Content-Type\", \"application/json\") .build(); Response response = client.newCall(request).execute(); PHP (curl) <?php $curl = curl_init(); curl_setopt_array($curl, array( CURLOPT_URL => 'https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/seg', CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => '', CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 0, CURLOPT_FOLLOWLOCATION => true, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => 'POST', CURLOPT_POSTFIELDS =>'{ \"url\":\"https://aikits.demo.solutions.aws.a2z.org.cn/img/seg-2.jpg\" }', CURLOPT_HTTPHEADER => array( 'Content-Type: application/json' ), )); $response = curl_exec($curl); curl_close($curl); echo $response; Invoke URL via IAM in Postman Create a new tab in Postman and enter the API invoke URL in the previous step into the address bar. Select POST as the HTTP verb. Select Amazon Web Service Signature in the Authorization tab, and enterauth details like AccessKey, SecretKey and Region of the corresponding account (such as cn-north-1 or cn-northwest-1 ). Click the Body tab and select the option raw and then choose the JSON format. Enter the test data in the Body and click the Send button to see the response result. { \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/seg-2.jpg\" } Uninstall To uninstall the solution, delete the CloudFormation stacks: Sign in to the Amazon Web Service CloudFormation console Select the solution\u2019s parent stack. All other solution stacks will be deleted automatically. Choose Delete . You can undeploy the stack in Amazon CloudFormation console. The deletion process takes about 10 minutes.","title":"Deployment - Human Image Segmentation"},{"location":"deploy-seg-en/#background","text":"This deployment guide describes how to deploy AI Solution Kit - Human Image Segmentation solution by Amazon CloudFormation templates. The AI and ML driven applications are maturing rapidly and creating new demands on enterprises, the AI Solution Kit provides diversified leading AI/ML solutions that are easy to use. Customers can easily work with the REST API or software development kit (SDK) provided by AI/ML solution. Based on deep learning model, Human Image Segmentation solution to identify the outline of the person and body-part in the image, to separate it from the background with high accuracy segmentation.","title":"Background"},{"location":"deploy-seg-en/#solution-description","text":"Once the solution deployed by Amazon CloudFormation template, customers can use this solution feature by calling HTTP (s) or API interfaces, the REST API interface which created by Amazon API Gateway provides customers the AI services and customers can send request (pictures) to the Amazon API Gateway via HTTP POST verb, then the Amazon Lambda function is invoked by the Amazon API Gateway, and returns the Base64 encoded Alpha channel image data after removing the background. By using a serverless architecture, such as Amazon Lambda, Amazon API Gateway, serverless works in a pay-as-you-go manner, which means that customers only pay for those resources which they actually use.","title":"Solution Description"},{"location":"deploy-seg-en/#system-architecture","text":"Starting from the API User(s) side, the API user sends an HTTP request to Amazon API Gateway to pass payload parameters. The API Gateway is a layer that provides the RESTful API to the client for the AI applications, in AI Kits solution. Lambda Integration (the first diagram): The ML models are stored in Amazon EFS, the AI algorithm are implemented in the Lambda function, the Lambda function parses the values from API Gateway and performs model in EFS. After that, it returns a value (JSON format) and sends it back to the API Gateway.","title":"System Architecture"},{"location":"deploy-seg-en/#architecture-diagram","text":"This solution currently supports deployment in Amazon Web Services standard regions.","title":"Architecture diagram"},{"location":"deploy-seg-en/#components","text":"Amazon API Gateway This solution uses API Gateway to route HTTP requests To associate the domain name registered by the ICP API Gateway can also set a key to authorize the HTTP POST requester Amazon Lambda The Lambda function handles the customer's requests for inference. Amazon EFS Amazon EFS stores machine learning models based on Lambda pre-training. Lambda functions perform inference calculations by calling models stored in Amazon EFS and return the results to the caller.","title":"Components"},{"location":"deploy-seg-en/#instance-type","text":"The Human Image Segmentation solution includes two architecture design types based on Lambda functions. When deploying this solution, users only need to choose one of them for deployment according to actual business scenarios. The Lambda function architecture is designed for serverless architecture, and users only pay for the actual usage.","title":"Instance Type"},{"location":"deploy-seg-en/#automated-deployment","text":"The following deployment instructions apply to solutions deployed in the Amazon Web Services (Ningxia) region operated by NWCD or the Amazon Web Services (Beijing) region operated by Sinnet. You can use the following link to quickly launch an Amazon CloudFormation stack to deploy and manage this solution. Time to deploy : Approximately 15 minutes.","title":"Automated Deployment"},{"location":"deploy-seg-en/#prerequisites-china-region-only","text":"This solution uses Amazon API Gateway to receive API call requests, so if you want to provide API requests that can be accessed without authentication in the Beijing region, please make sure that your Amazon Web Services account has passed the Internet Content Provider (ICP) for the record, port 80/443 can be opened normally, please refer to here .","title":"Prerequisites (China Region Only)"},{"location":"deploy-seg-en/#sign-in-to-amazon-web-service-console","text":"Sign in to the Amazon Web Service Management Console with the IAM permissions (such as: APIGatewayInvokeFullAcces ). Please use Sign in to amazon.com to sign in your Amazon Web Services account, for China region via https://console.amazonaws.cn.","title":"Sign in to Amazon Web Service console"},{"location":"deploy-seg-en/#launch-the-stack","text":"Open the Amazon Web Services console and use the Region selector in the console navigation bar to launch this solution in a different Amazon Web Service Region. Then, click the applicable link to launch the solution Amazon CloudFormation template. You can also download the template as a starting point for your own implementation. Launch Solution Description Beijing Region AI Solution Kit - Human Image Segmentation in Beijing, China region Ningxia Region AI Solution Kit - Human Image Segmentation in Ningxia, China region Global Regions AI Solution Kit - Human Image Segmentation CloudFormation template AIKits-Human-Seg-Stack.template By default, the template will start after you log in after the default console area. To launch the solution in a designated Amazon Web Service region, please select it from the region drop-down list in the console navigation bar. On the Specify template page, verify that you selected the correct template and choose Next. On the Specify stack details page, assign a name to AI Solution Kit - Human Image Segmentation in the Stack name field. Under Parameters , review the parameters for the template, and modify them as necessary. To opt out of a particular feature, choose none or no as applicable. Parameter Default Description customStageName prod The name of the stage, which API Gateway uses as the first path segment in the invoked Uniform Resource Identifier (URI). customAuthType AWS_IAM Authorization for API Gateway. Valid Values are AWS_IAM and NONE . On the Review page, review and confirm the settings. Check the boxes acknowledging that the template will create Amazon Web Service Identity and Access Management (IAM) resources and any additional capabilities required. Choose Create to deploy the stack. View the status of the stack in the Amazon CloudFormation console in the Status column. You should receive a status of CREATE_COMPLETE in approximately 15 minutes. To see details for the stack resources, choose the Outputs tab. This will include the aikitsInvokeURL value, which is the API Gateway endpoint.","title":"Launch the stack"},{"location":"deploy-seg-en/#get-started","text":"You can find the REST API inviking URL with name aikitsInvokeURL in the Outputs tab of Amazon CloudFormation stack.","title":"Get Started"},{"location":"deploy-seg-en/#rest-api-reference","text":"HTTP Method: POST Body Parameters Name Type Optional Description url String Use img or url URL address of the image. Supports HTTP/HTTPS and S3 protocols. Required image format jpg / jpeg / png / bmp, not exceeding the longest side 4096px. img String Use img or url Base64-encoded image data Sample Request Body { \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/seg-2.jpg\" } { \"img\": \"/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/\u2026\u2026\" } Response Prarameters Name Type Description result String Base64 encoded Alpha channel image data after removing the background Sample Response { \"result\": \"/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/\u2026\u2026\" }","title":"REST API Reference"},{"location":"deploy-seg-en/#sample-request-code","text":"cURL curl --location --request POST 'https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/seg' \\ --header 'Content-Type: application/json' \\ --data-raw '{ \"url\":\"https://aikits.demo.solutions.aws.a2z.org.cn/img/seg-2.jpg\" }' Python (requests) import requests import json url = \"https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/seg\" payload = json.dumps({ \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/seg-2.jpg\" }) headers = { 'Content-Type': 'application/json' } response = requests.request(\"POST\", url, headers=headers, data=payload) print(response.text) Java (OkHttp) OkHttpClient client = new OkHttpClient().newBuilder() .build(); MediaType mediaType = MediaType.parse(\"application/json\"); RequestBody body = RequestBody.create(mediaType, \"{\\n \\\"url\\\":\\\"https://aikits.demo.solutions.aws.a2z.org.cn/img/seg-2.jpg\\\"\\n}\"); Request request = new Request.Builder() .url(\"https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/seg\") .method(\"POST\", body) .addHeader(\"Content-Type\", \"application/json\") .build(); Response response = client.newCall(request).execute(); PHP (curl) <?php $curl = curl_init(); curl_setopt_array($curl, array( CURLOPT_URL => 'https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/seg', CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => '', CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 0, CURLOPT_FOLLOWLOCATION => true, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => 'POST', CURLOPT_POSTFIELDS =>'{ \"url\":\"https://aikits.demo.solutions.aws.a2z.org.cn/img/seg-2.jpg\" }', CURLOPT_HTTPHEADER => array( 'Content-Type: application/json' ), )); $response = curl_exec($curl); curl_close($curl); echo $response;","title":"Sample Request Code"},{"location":"deploy-seg-en/#invoke-url-via-iam-in-postman","text":"Create a new tab in Postman and enter the API invoke URL in the previous step into the address bar. Select POST as the HTTP verb. Select Amazon Web Service Signature in the Authorization tab, and enterauth details like AccessKey, SecretKey and Region of the corresponding account (such as cn-north-1 or cn-northwest-1 ). Click the Body tab and select the option raw and then choose the JSON format. Enter the test data in the Body and click the Send button to see the response result. { \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/seg-2.jpg\" }","title":"Invoke URL via IAM in Postman"},{"location":"deploy-seg-en/#uninstall","text":"To uninstall the solution, delete the CloudFormation stacks: Sign in to the Amazon Web Service CloudFormation console Select the solution\u2019s parent stack. All other solution stacks will be deleted automatically. Choose Delete . You can undeploy the stack in Amazon CloudFormation console. The deletion process takes about 10 minutes.","title":"Uninstall"},{"location":"deploy-sr-en/","text":"Background This deployment guide describes how to deploy AI Solution Kit - Image Super Resolution solution by Amazon CloudFormation templates. The AI and ML driven applications are maturing rapidly and creating new demands on enterprises, the AI Solution Kit provides diversified leading AI/ML solutions that are easy to use. Customers can easily work with the REST API or software development kit (SDK) provided by AI/ML solution. Image Super Resolution solution based on pre-trained networks, super sesolution feature enhancing the resolution of an image from low-resolution to high. Solution Description Once the solution deployed by Amazon CloudFormation template, customers can use this solution feature by calling HTTP (s) or API interfaces, the REST API interface which created by Amazon API Gateway provides customers the AI services and customers can send request (pictures) to the Amazon API Gateway via HTTP POST method, then the Amazon Lambda function is invoked by the Amazon API Gateway, and returns the Base64 encoded Alpha channel image data after super solution. By using a serverless architecture, such as Amazon Lambda, Amazon API Gateway, serverless works in a pay-as-you-go manner, which means that customers only pay for those resources which they actually use. System Architecture Starting from the API User(s) side, the API user sends an HTTP request to Amazon API Gateway to pass payload parameters. The API Gateway is a layer that provides the RESTful API to the client for the AI applications, in AI Kits solution, there are two types of AI feature implementations: Lambda function and SageMaker. Lambda Integration The ML models are stored in Amazon EFS, the AI algorithm are implemented in the Lambda function, the Lambda function parses the values from API Gateway and performs model in EFS. After that, it returns a value (JSON format) and sends it back to the API Gateway. SageMaker Integration The Lambda function (invoke endpoint) parses the value and sends it to the Amazon SageMaker model endpoint, the SageMaker model performs the prediction and returns the predicted value to the Lambda. The same with the Lambda implementations, the Amazon API Gateway subsequently receives the response from the Lambda function and maps it to a response that is sent back to the client. Architecture diagram This solution currently supports deployment in Amazon Web Services standard regions. Lambda Integration SageMaker Integration Components Amazon API Gateway This solution uses API Gateway to route HTTP requests To associate the domain name registered by the ICP API Gateway can also set a key to authorize the HTTP POST requester Amazon Lambda The Lambda function handles the customer's requests for inference. Amazon EFS Amazon EFS stores machine learning models based on Lambda pre-training. Lambda functions perform inference calculations by calling models stored in Amazon EFS and return the results to the caller. Amazon SageMaker SageMaker cluster handles customers inference request, the face detection, human body detection and face comparison models are loaded according deployment configuration. Sagemaker endpoints could be configured to auto-scaling according to requests' pattern to support high-concurrency application scenarios. Instance Type Image Super Resolution solution includes two architecture design types based on Lambda functions and SageMaker GPU instances (see System Architecture). When deploying this solution, users only need to choose one of them for deployment according to actual business scenarios. The Lambda function architecture is designed for serverless architecture, and users only pay for the actual usage. The SageMaker GPU architecture runs on a managed service based on Amazon SageMaker instances and aims to provide high availability and high-performance real-time inference for use cases that require real-time prediction. Automated Deployment The following deployment instructions apply to solutions deployed in the Amazon Web Services (Ningxia) region operated by NWCD or the Amazon Web Services (Beijing) region operated by Sinnet. You can use the following link to quickly launch an Amazon CloudFormation stack to deploy and manage this solution. Time to deploy : Approximately 15 minutes. Prerequisites (China Region Only) This solution uses Amazon API Gateway to receive API call requests, so if you want to provide API requests that can be accessed without authentication in the Beijing region, please make sure that your Amazon Web Services account has passed the Internet Content Provider (ICP) for the record, port 80/443 can be opened normally, please refer to here . Sign in to Amazon Web Service console Sign in to the Amazon Web Service Management Console with the IAM permissions (such as: APIGatewayInvokeFullAcces ). Please use Sign in to amazon.com to sign in your Amazon Web Services account, for China region via https://console.amazonaws.cn. Launch the stack Open the Amazon Web Services console and use the Region selector in the console navigation bar to launch this solution in a different Amazon Web Service Region. Then, click the applicable link to launch the solution Amazon CloudFormation template. You can also download the template as a starting point for your own implementation. Launch Solution Description Beijing Region(GPU) AI Solution Kits - Super Resolution with Amazon SageMaker GPU Instance Ningxia Region(GPU) AI Solution Kits - Super Resolution with Amazon SageMaker GPU Instance Global Regions(GPU) AI Solution Kits - Super Resolution with Amazon SageMaker GPU Instance Global Regions(Inf1) AI Solution Kits - Super Resolution with Amazon SageMaker Inf1 Instance Beijing Region(Lambda) AI Solution Kits - Super Resolution with Amazon Lambda Ningxia Region(Lambda) AI Solution Kits - Super Resolution with Amazon Lambda Global Regions(Lambda) AI Solution Kits - Super Resolution with Amazon Lambda CloudFormation template AIKits-Super-Resolution-Stack.template AIKits-Super-Resolution-Inf1-Stack.template AIKits-Super-Resolution-GPU-Stack.template By default, the template will start after you log in after the default console area. To launch the solution in a designated Amazon Web Service region, please select it from the region drop-down list in the console navigation bar. On the Specify template page, verify that you selected the correct template and choose Next. On the Specify stack details page, assign a name to AI Solution Kit - Image Super Resolution in the Stack name field. Under Parameters , review the parameters for the template, and modify them as necessary. To opt out of a particular feature, choose none or no as applicable. Parameter Default Description customStageName prod The name of the stage, which API Gateway uses as the first path segment in the invoked Uniform Resource Identifier (URI). customAuthType AWS_IAM Authorization for API Gateway. Valid Values are AWS_IAM and NONE . On the Review page, review and confirm the settings. Check the boxes acknowledging that the template will create Amazon Web Service Identity and Access Management (IAM) resources and any additional capabilities required. Choose Create to deploy the stack. View the status of the stack in the Amazon CloudFormation console in the Status column. You should receive a status of CREATE_COMPLETE in approximately 15 minutes. To see details for the stack resources, choose the Outputs tab. This will include the aikitsInvokeURL value, which is the API Gateway endpoint. Get Started You can find the REST API inviking URL with name aikitsInvokeURL in the Outputs tab of Amazon CloudFormation stack. REST API Reference HTTP Method: POST Body Parameters Name Type Optional Description url String Use img or url URL address of the image. Supports HTTP/HTTPS and S3 protocols. Required image format jpg / jpeg / png / bmp, not exceeding the longest side 4096px. img String Use img or url Base64-encoded image data scale Integer Optional The support magnification is 2 or 4, the default value is 2 Sample Request Body { \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/sr-5.jpg\" } { \"img\": \"/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/\u2026\u2026\" } Response Prarameters Name Type Description result String The base64 encoded image data after scaling Sample Response { \"result\": \"/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/\u2026\u2026\" } Sample Request Code cURL curl --location --request POST 'https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/resolution' \\ --header 'Content-Type: application/json' \\ --data-raw '{ \"url\":\"https://aikits.demo.solutions.aws.a2z.org.cn/img/sr-5.jpg\" }' Python (requests) import requests import json url = \"https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/resolution\" payload = json.dumps({ \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/sr-5.jpg\" }) headers = { 'Content-Type': 'application/json' } response = requests.request(\"POST\", url, headers=headers, data=payload) print(response.text) Java (OkHttp) OkHttpClient client = new OkHttpClient().newBuilder() .build(); MediaType mediaType = MediaType.parse(\"application/json\"); RequestBody body = RequestBody.create(mediaType, \"{\\n \\\"url\\\":\\\"https://aikits.demo.solutions.aws.a2z.org.cn/img/sr-5.jpg\\\"\\n}\"); Request request = new Request.Builder() .url(\"https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/resolution\") .method(\"POST\", body) .addHeader(\"Content-Type\", \"application/json\") .build(); Response response = client.newCall(request).execute(); PHP (curl) <?php $curl = curl_init(); curl_setopt_array($curl, array( CURLOPT_URL => 'https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/resolution', CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => '', CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 0, CURLOPT_FOLLOWLOCATION => true, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => 'POST', CURLOPT_POSTFIELDS =>'{ \"url\":\"https://aikits.demo.solutions.aws.a2z.org.cn/img/sr-5.jpg\" }', CURLOPT_HTTPHEADER => array( 'Content-Type: application/json' ), )); $response = curl_exec($curl); curl_close($curl); echo $response; Invoke URL via IAM in Postman Create a new tab in Postman and enter the API invoke URL in the previous step into the address bar. Select POST as the HTTP verb. Select Amazon Web Service Signature in the Authorization tab, and enterauth details like AccessKey, SecretKey and Region of the corresponding account (such as cn-north-1 or cn-northwest-1 ). Click the Body tab and select the option raw and then choose the JSON format. Enter the test data in the Body and click the Send button to see the response result. { \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/sr-2.jpg\" } Uninstall To uninstall the solution, delete the CloudFormation stacks: Sign in to the Amazon Web Service CloudFormation console Select the solution\u2019s parent stack. All other solution stacks will be deleted automatically. Choose Delete . You can undeploy the stack in Amazon CloudFormation console. The deletion process takes about 10 minutes.","title":"Deployment - Image Super Resolution"},{"location":"deploy-sr-en/#background","text":"This deployment guide describes how to deploy AI Solution Kit - Image Super Resolution solution by Amazon CloudFormation templates. The AI and ML driven applications are maturing rapidly and creating new demands on enterprises, the AI Solution Kit provides diversified leading AI/ML solutions that are easy to use. Customers can easily work with the REST API or software development kit (SDK) provided by AI/ML solution. Image Super Resolution solution based on pre-trained networks, super sesolution feature enhancing the resolution of an image from low-resolution to high.","title":"Background"},{"location":"deploy-sr-en/#solution-description","text":"Once the solution deployed by Amazon CloudFormation template, customers can use this solution feature by calling HTTP (s) or API interfaces, the REST API interface which created by Amazon API Gateway provides customers the AI services and customers can send request (pictures) to the Amazon API Gateway via HTTP POST method, then the Amazon Lambda function is invoked by the Amazon API Gateway, and returns the Base64 encoded Alpha channel image data after super solution. By using a serverless architecture, such as Amazon Lambda, Amazon API Gateway, serverless works in a pay-as-you-go manner, which means that customers only pay for those resources which they actually use.","title":"Solution Description"},{"location":"deploy-sr-en/#system-architecture","text":"Starting from the API User(s) side, the API user sends an HTTP request to Amazon API Gateway to pass payload parameters. The API Gateway is a layer that provides the RESTful API to the client for the AI applications, in AI Kits solution, there are two types of AI feature implementations: Lambda function and SageMaker. Lambda Integration The ML models are stored in Amazon EFS, the AI algorithm are implemented in the Lambda function, the Lambda function parses the values from API Gateway and performs model in EFS. After that, it returns a value (JSON format) and sends it back to the API Gateway. SageMaker Integration The Lambda function (invoke endpoint) parses the value and sends it to the Amazon SageMaker model endpoint, the SageMaker model performs the prediction and returns the predicted value to the Lambda. The same with the Lambda implementations, the Amazon API Gateway subsequently receives the response from the Lambda function and maps it to a response that is sent back to the client.","title":"System Architecture"},{"location":"deploy-sr-en/#architecture-diagram","text":"This solution currently supports deployment in Amazon Web Services standard regions. Lambda Integration SageMaker Integration","title":"Architecture diagram"},{"location":"deploy-sr-en/#components","text":"Amazon API Gateway This solution uses API Gateway to route HTTP requests To associate the domain name registered by the ICP API Gateway can also set a key to authorize the HTTP POST requester Amazon Lambda The Lambda function handles the customer's requests for inference. Amazon EFS Amazon EFS stores machine learning models based on Lambda pre-training. Lambda functions perform inference calculations by calling models stored in Amazon EFS and return the results to the caller. Amazon SageMaker SageMaker cluster handles customers inference request, the face detection, human body detection and face comparison models are loaded according deployment configuration. Sagemaker endpoints could be configured to auto-scaling according to requests' pattern to support high-concurrency application scenarios.","title":"Components"},{"location":"deploy-sr-en/#instance-type","text":"Image Super Resolution solution includes two architecture design types based on Lambda functions and SageMaker GPU instances (see System Architecture). When deploying this solution, users only need to choose one of them for deployment according to actual business scenarios. The Lambda function architecture is designed for serverless architecture, and users only pay for the actual usage. The SageMaker GPU architecture runs on a managed service based on Amazon SageMaker instances and aims to provide high availability and high-performance real-time inference for use cases that require real-time prediction.","title":"Instance Type"},{"location":"deploy-sr-en/#automated-deployment","text":"The following deployment instructions apply to solutions deployed in the Amazon Web Services (Ningxia) region operated by NWCD or the Amazon Web Services (Beijing) region operated by Sinnet. You can use the following link to quickly launch an Amazon CloudFormation stack to deploy and manage this solution. Time to deploy : Approximately 15 minutes.","title":"Automated Deployment"},{"location":"deploy-sr-en/#prerequisites-china-region-only","text":"This solution uses Amazon API Gateway to receive API call requests, so if you want to provide API requests that can be accessed without authentication in the Beijing region, please make sure that your Amazon Web Services account has passed the Internet Content Provider (ICP) for the record, port 80/443 can be opened normally, please refer to here .","title":"Prerequisites (China Region Only)"},{"location":"deploy-sr-en/#sign-in-to-amazon-web-service-console","text":"Sign in to the Amazon Web Service Management Console with the IAM permissions (such as: APIGatewayInvokeFullAcces ). Please use Sign in to amazon.com to sign in your Amazon Web Services account, for China region via https://console.amazonaws.cn.","title":"Sign in to Amazon Web Service console"},{"location":"deploy-sr-en/#launch-the-stack","text":"Open the Amazon Web Services console and use the Region selector in the console navigation bar to launch this solution in a different Amazon Web Service Region. Then, click the applicable link to launch the solution Amazon CloudFormation template. You can also download the template as a starting point for your own implementation. Launch Solution Description Beijing Region(GPU) AI Solution Kits - Super Resolution with Amazon SageMaker GPU Instance Ningxia Region(GPU) AI Solution Kits - Super Resolution with Amazon SageMaker GPU Instance Global Regions(GPU) AI Solution Kits - Super Resolution with Amazon SageMaker GPU Instance Global Regions(Inf1) AI Solution Kits - Super Resolution with Amazon SageMaker Inf1 Instance Beijing Region(Lambda) AI Solution Kits - Super Resolution with Amazon Lambda Ningxia Region(Lambda) AI Solution Kits - Super Resolution with Amazon Lambda Global Regions(Lambda) AI Solution Kits - Super Resolution with Amazon Lambda CloudFormation template AIKits-Super-Resolution-Stack.template AIKits-Super-Resolution-Inf1-Stack.template AIKits-Super-Resolution-GPU-Stack.template By default, the template will start after you log in after the default console area. To launch the solution in a designated Amazon Web Service region, please select it from the region drop-down list in the console navigation bar. On the Specify template page, verify that you selected the correct template and choose Next. On the Specify stack details page, assign a name to AI Solution Kit - Image Super Resolution in the Stack name field. Under Parameters , review the parameters for the template, and modify them as necessary. To opt out of a particular feature, choose none or no as applicable. Parameter Default Description customStageName prod The name of the stage, which API Gateway uses as the first path segment in the invoked Uniform Resource Identifier (URI). customAuthType AWS_IAM Authorization for API Gateway. Valid Values are AWS_IAM and NONE . On the Review page, review and confirm the settings. Check the boxes acknowledging that the template will create Amazon Web Service Identity and Access Management (IAM) resources and any additional capabilities required. Choose Create to deploy the stack. View the status of the stack in the Amazon CloudFormation console in the Status column. You should receive a status of CREATE_COMPLETE in approximately 15 minutes. To see details for the stack resources, choose the Outputs tab. This will include the aikitsInvokeURL value, which is the API Gateway endpoint.","title":"Launch the stack"},{"location":"deploy-sr-en/#get-started","text":"You can find the REST API inviking URL with name aikitsInvokeURL in the Outputs tab of Amazon CloudFormation stack.","title":"Get Started"},{"location":"deploy-sr-en/#rest-api-reference","text":"HTTP Method: POST Body Parameters Name Type Optional Description url String Use img or url URL address of the image. Supports HTTP/HTTPS and S3 protocols. Required image format jpg / jpeg / png / bmp, not exceeding the longest side 4096px. img String Use img or url Base64-encoded image data scale Integer Optional The support magnification is 2 or 4, the default value is 2 Sample Request Body { \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/sr-5.jpg\" } { \"img\": \"/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/\u2026\u2026\" } Response Prarameters Name Type Description result String The base64 encoded image data after scaling Sample Response { \"result\": \"/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/\u2026\u2026\" }","title":"REST API Reference"},{"location":"deploy-sr-en/#sample-request-code","text":"cURL curl --location --request POST 'https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/resolution' \\ --header 'Content-Type: application/json' \\ --data-raw '{ \"url\":\"https://aikits.demo.solutions.aws.a2z.org.cn/img/sr-5.jpg\" }' Python (requests) import requests import json url = \"https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/resolution\" payload = json.dumps({ \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/sr-5.jpg\" }) headers = { 'Content-Type': 'application/json' } response = requests.request(\"POST\", url, headers=headers, data=payload) print(response.text) Java (OkHttp) OkHttpClient client = new OkHttpClient().newBuilder() .build(); MediaType mediaType = MediaType.parse(\"application/json\"); RequestBody body = RequestBody.create(mediaType, \"{\\n \\\"url\\\":\\\"https://aikits.demo.solutions.aws.a2z.org.cn/img/sr-5.jpg\\\"\\n}\"); Request request = new Request.Builder() .url(\"https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/resolution\") .method(\"POST\", body) .addHeader(\"Content-Type\", \"application/json\") .build(); Response response = client.newCall(request).execute(); PHP (curl) <?php $curl = curl_init(); curl_setopt_array($curl, array( CURLOPT_URL => 'https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/prod/resolution', CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => '', CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 0, CURLOPT_FOLLOWLOCATION => true, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => 'POST', CURLOPT_POSTFIELDS =>'{ \"url\":\"https://aikits.demo.solutions.aws.a2z.org.cn/img/sr-5.jpg\" }', CURLOPT_HTTPHEADER => array( 'Content-Type: application/json' ), )); $response = curl_exec($curl); curl_close($curl); echo $response;","title":"Sample Request Code"},{"location":"deploy-sr-en/#invoke-url-via-iam-in-postman","text":"Create a new tab in Postman and enter the API invoke URL in the previous step into the address bar. Select POST as the HTTP verb. Select Amazon Web Service Signature in the Authorization tab, and enterauth details like AccessKey, SecretKey and Region of the corresponding account (such as cn-north-1 or cn-northwest-1 ). Click the Body tab and select the option raw and then choose the JSON format. Enter the test data in the Body and click the Send button to see the response result. { \"url\": \"https://aikits.demo.solutions.aws.a2z.org.cn/img/sr-2.jpg\" }","title":"Invoke URL via IAM in Postman"},{"location":"deploy-sr-en/#uninstall","text":"To uninstall the solution, delete the CloudFormation stacks: Sign in to the Amazon Web Service CloudFormation console Select the solution\u2019s parent stack. All other solution stacks will be deleted automatically. Choose Delete . You can undeploy the stack in Amazon CloudFormation console. The deletion process takes about 10 minutes.","title":"Uninstall"},{"location":"faq-en/","text":"Frequently Asked Questions What is this solution? This is a solution where customers are able to find all up-to-date AI features provided by Amazon Web Service GCR Solutions team. Such as Chinese OCR, image super resolution, pornographic image detection, human image segmentation. AI features list: Infer Chinese OCR Porn Image Detection Image Super Resolution Human Image Segmentation What are the scenarios for this solution? Infer Chinese OCR: Support simplified/traditional Chinese, English and numbers character recognition. Recognizes text on an image as text and returns text coordinates. Porn Image Detection: Identify confidence score (normal, sexy, porn) of inappropriate image. Image Super Resolution: Intelligently zoom in single image for 2~4x magnification. Human Image Segmentation: Segmenting human body from photo images. How does the solution work? Each AI feature will be an individual deployment stack and user can deploy the stack easily. Once deployed, the HTTPS REST invoking endpoint receives the customer request and sent the inference result back to the client. What regions is this solution supported to run in? This solution currently supports deployment in Amazon Web Services standard regions.","title":"FAQ"},{"location":"faq-en/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"faq-en/#what-is-this-solution","text":"This is a solution where customers are able to find all up-to-date AI features provided by Amazon Web Service GCR Solutions team. Such as Chinese OCR, image super resolution, pornographic image detection, human image segmentation. AI features list: Infer Chinese OCR Porn Image Detection Image Super Resolution Human Image Segmentation","title":"What is this solution?"},{"location":"faq-en/#what-are-the-scenarios-for-this-solution","text":"Infer Chinese OCR: Support simplified/traditional Chinese, English and numbers character recognition. Recognizes text on an image as text and returns text coordinates. Porn Image Detection: Identify confidence score (normal, sexy, porn) of inappropriate image. Image Super Resolution: Intelligently zoom in single image for 2~4x magnification. Human Image Segmentation: Segmenting human body from photo images.","title":"What are the scenarios for this solution?"},{"location":"faq-en/#how-does-the-solution-work","text":"Each AI feature will be an individual deployment stack and user can deploy the stack easily. Once deployed, the HTTPS REST invoking endpoint receives the customer request and sent the inference result back to the client.","title":"How does the solution work?"},{"location":"faq-en/#what-regions-is-this-solution-supported-to-run-in","text":"This solution currently supports deployment in Amazon Web Services standard regions.","title":"What regions is this solution supported to run in?"}]}